//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace WebserviceClient.Enova365Webservice {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="InternalServiceMethodInvokerParams", Namespace="http://schemas.datacontract.org/2004/07/Soneta.Types")]
    [System.SerializableAttribute()]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(WebserviceClient.Enova365Webservice.ServiceMethodInvokerParams))]
    public partial class InternalServiceMethodInvokerParams : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ClientAddressField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ContextHandleField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DatabaseHandleField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string IpFiltersField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.Generic.Dictionary<string, object> MethodArgsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MethodNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string OperatorField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PasswordField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ServiceNameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ClientAddress {
            get {
                return this.ClientAddressField;
            }
            set {
                if ((object.ReferenceEquals(this.ClientAddressField, value) != true)) {
                    this.ClientAddressField = value;
                    this.RaisePropertyChanged("ClientAddress");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ContextHandle {
            get {
                return this.ContextHandleField;
            }
            set {
                if ((object.ReferenceEquals(this.ContextHandleField, value) != true)) {
                    this.ContextHandleField = value;
                    this.RaisePropertyChanged("ContextHandle");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DatabaseHandle {
            get {
                return this.DatabaseHandleField;
            }
            set {
                if ((object.ReferenceEquals(this.DatabaseHandleField, value) != true)) {
                    this.DatabaseHandleField = value;
                    this.RaisePropertyChanged("DatabaseHandle");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string IpFilters {
            get {
                return this.IpFiltersField;
            }
            set {
                if ((object.ReferenceEquals(this.IpFiltersField, value) != true)) {
                    this.IpFiltersField = value;
                    this.RaisePropertyChanged("IpFilters");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.Dictionary<string, object> MethodArgs {
            get {
                return this.MethodArgsField;
            }
            set {
                if ((object.ReferenceEquals(this.MethodArgsField, value) != true)) {
                    this.MethodArgsField = value;
                    this.RaisePropertyChanged("MethodArgs");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MethodName {
            get {
                return this.MethodNameField;
            }
            set {
                if ((object.ReferenceEquals(this.MethodNameField, value) != true)) {
                    this.MethodNameField = value;
                    this.RaisePropertyChanged("MethodName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Operator {
            get {
                return this.OperatorField;
            }
            set {
                if ((object.ReferenceEquals(this.OperatorField, value) != true)) {
                    this.OperatorField = value;
                    this.RaisePropertyChanged("Operator");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Password {
            get {
                return this.PasswordField;
            }
            set {
                if ((object.ReferenceEquals(this.PasswordField, value) != true)) {
                    this.PasswordField = value;
                    this.RaisePropertyChanged("Password");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ServiceName {
            get {
                return this.ServiceNameField;
            }
            set {
                if ((object.ReferenceEquals(this.ServiceNameField, value) != true)) {
                    this.ServiceNameField = value;
                    this.RaisePropertyChanged("ServiceName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ServiceMethodInvokerParams", Namespace="http://schemas.datacontract.org/2004/07/Soneta.Net.Types")]
    [System.SerializableAttribute()]
    public partial class ServiceMethodInvokerParams : WebserviceClient.Enova365Webservice.InternalServiceMethodInvokerParams {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private WebserviceClient.Enova365Webservice.ConnectionInfo ConnectionInfoField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public WebserviceClient.Enova365Webservice.ConnectionInfo ConnectionInfo {
            get {
                return this.ConnectionInfoField;
            }
            set {
                if ((object.ReferenceEquals(this.ConnectionInfoField, value) != true)) {
                    this.ConnectionInfoField = value;
                    this.RaisePropertyChanged("ConnectionInfo");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ConnectionInfo", Namespace="http://schemas.datacontract.org/2004/07/Soneta.Net.Types")]
    [System.SerializableAttribute()]
    public partial class ConnectionInfo : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DatabaseField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string OperatorField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PasswordField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ServerField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ServerTypeField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Database {
            get {
                return this.DatabaseField;
            }
            set {
                if ((object.ReferenceEquals(this.DatabaseField, value) != true)) {
                    this.DatabaseField = value;
                    this.RaisePropertyChanged("Database");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Operator {
            get {
                return this.OperatorField;
            }
            set {
                if ((object.ReferenceEquals(this.OperatorField, value) != true)) {
                    this.OperatorField = value;
                    this.RaisePropertyChanged("Operator");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Password {
            get {
                return this.PasswordField;
            }
            set {
                if ((object.ReferenceEquals(this.PasswordField, value) != true)) {
                    this.PasswordField = value;
                    this.RaisePropertyChanged("Password");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Server {
            get {
                return this.ServerField;
            }
            set {
                if ((object.ReferenceEquals(this.ServerField, value) != true)) {
                    this.ServerField = value;
                    this.RaisePropertyChanged("Server");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ServerType {
            get {
                return this.ServerTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.ServerTypeField, value) != true)) {
                    this.ServerTypeField = value;
                    this.RaisePropertyChanged("ServerType");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="InvokeServiceMethodResult", Namespace="http://schemas.datacontract.org/2004/07/Soneta.Net.Types")]
    [System.SerializableAttribute()]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(WebserviceClient.Enova365Webservice.InternalServiceMethodInvokerParams))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(WebserviceClient.Enova365Webservice.ServiceMethodInvokerParams))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(WebserviceClient.Enova365Webservice.ConnectionInfo))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.Generic.Dictionary<string, object>))]
    public partial class InvokeServiceMethodResult : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ExceptionMessageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsEmptyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsExceptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private object ResultInstanceField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ExceptionMessage {
            get {
                return this.ExceptionMessageField;
            }
            set {
                if ((object.ReferenceEquals(this.ExceptionMessageField, value) != true)) {
                    this.ExceptionMessageField = value;
                    this.RaisePropertyChanged("ExceptionMessage");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsEmpty {
            get {
                return this.IsEmptyField;
            }
            set {
                if ((this.IsEmptyField.Equals(value) != true)) {
                    this.IsEmptyField = value;
                    this.RaisePropertyChanged("IsEmpty");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsException {
            get {
                return this.IsExceptionField;
            }
            set {
                if ((this.IsExceptionField.Equals(value) != true)) {
                    this.IsExceptionField = value;
                    this.RaisePropertyChanged("IsException");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public object ResultInstance {
            get {
                return this.ResultInstanceField;
            }
            set {
                if ((object.ReferenceEquals(this.ResultInstanceField, value) != true)) {
                    this.ResultInstanceField = value;
                    this.RaisePropertyChanged("ResultInstance");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="Enova365Webservice.IMethodInvokerService")]
    public interface IMethodInvokerService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMethodInvokerService/InvokeServiceMethod", ReplyAction="http://tempuri.org/IMethodInvokerService/InvokeServiceMethodResponse")]
        WebserviceClient.Enova365Webservice.InvokeServiceMethodResult InvokeServiceMethod(WebserviceClient.Enova365Webservice.ServiceMethodInvokerParams invokerParams);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMethodInvokerService/InvokeServiceMethod", ReplyAction="http://tempuri.org/IMethodInvokerService/InvokeServiceMethodResponse")]
        System.Threading.Tasks.Task<WebserviceClient.Enova365Webservice.InvokeServiceMethodResult> InvokeServiceMethodAsync(WebserviceClient.Enova365Webservice.ServiceMethodInvokerParams invokerParams);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMethodInvokerService/InvokeServiceMethodJson", ReplyAction="http://tempuri.org/IMethodInvokerService/InvokeServiceMethodJsonResponse")]
        string InvokeServiceMethodJson(WebserviceClient.Enova365Webservice.ServiceMethodInvokerParams invokerParams);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMethodInvokerService/InvokeServiceMethodJson", ReplyAction="http://tempuri.org/IMethodInvokerService/InvokeServiceMethodJsonResponse")]
        System.Threading.Tasks.Task<string> InvokeServiceMethodJsonAsync(WebserviceClient.Enova365Webservice.ServiceMethodInvokerParams invokerParams);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IMethodInvokerServiceChannel : WebserviceClient.Enova365Webservice.IMethodInvokerService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class MethodInvokerServiceClient : System.ServiceModel.ClientBase<WebserviceClient.Enova365Webservice.IMethodInvokerService>, WebserviceClient.Enova365Webservice.IMethodInvokerService {
        
        public MethodInvokerServiceClient() {
        }
        
        public MethodInvokerServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public MethodInvokerServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public MethodInvokerServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public MethodInvokerServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public WebserviceClient.Enova365Webservice.InvokeServiceMethodResult InvokeServiceMethod(WebserviceClient.Enova365Webservice.ServiceMethodInvokerParams invokerParams) {
            return base.Channel.InvokeServiceMethod(invokerParams);
        }
        
        public System.Threading.Tasks.Task<WebserviceClient.Enova365Webservice.InvokeServiceMethodResult> InvokeServiceMethodAsync(WebserviceClient.Enova365Webservice.ServiceMethodInvokerParams invokerParams) {
            return base.Channel.InvokeServiceMethodAsync(invokerParams);
        }
        
        public string InvokeServiceMethodJson(WebserviceClient.Enova365Webservice.ServiceMethodInvokerParams invokerParams) {
            return base.Channel.InvokeServiceMethodJson(invokerParams);
        }
        
        public System.Threading.Tasks.Task<string> InvokeServiceMethodJsonAsync(WebserviceClient.Enova365Webservice.ServiceMethodInvokerParams invokerParams) {
            return base.Channel.InvokeServiceMethodJsonAsync(invokerParams);
        }
    }
}
